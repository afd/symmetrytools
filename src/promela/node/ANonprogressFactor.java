/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ANonprogressFactor extends PFactor
{
    private TNp _np_;

    public ANonprogressFactor()
    {
        // Constructor
    }

    public ANonprogressFactor(
        @SuppressWarnings("hiding") TNp _np_)
    {
        // Constructor
        setNp(_np_);

    }

    @Override
    public Object clone()
    {
        return new ANonprogressFactor(
            cloneNode(this._np_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANonprogressFactor(this);
    }

    public TNp getNp()
    {
        return this._np_;
    }

    public void setNp(TNp node)
    {
        if(this._np_ != null)
        {
            this._np_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._np_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._np_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._np_ == child)
        {
            this._np_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._np_ == oldChild)
        {
            setNp((TNp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
