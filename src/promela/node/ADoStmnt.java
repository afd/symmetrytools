/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ADoStmnt extends PStmnt
{
    private TDo _do_;
    private POptions _options_;
    private TOd _od_;

    public ADoStmnt()
    {
        // Constructor
    }

    public ADoStmnt(
        @SuppressWarnings("hiding") TDo _do_,
        @SuppressWarnings("hiding") POptions _options_,
        @SuppressWarnings("hiding") TOd _od_)
    {
        // Constructor
        setDo(_do_);

        setOptions(_options_);

        setOd(_od_);

    }

    @Override
    public Object clone()
    {
        return new ADoStmnt(
            cloneNode(this._do_),
            cloneNode(this._options_),
            cloneNode(this._od_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADoStmnt(this);
    }

    public TDo getDo()
    {
        return this._do_;
    }

    public void setDo(TDo node)
    {
        if(this._do_ != null)
        {
            this._do_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._do_ = node;
    }

    public POptions getOptions()
    {
        return this._options_;
    }

    public void setOptions(POptions node)
    {
        if(this._options_ != null)
        {
            this._options_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._options_ = node;
    }

    public TOd getOd()
    {
        return this._od_;
    }

    public void setOd(TOd node)
    {
        if(this._od_ != null)
        {
            this._od_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._od_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._do_)
            + toString(this._options_)
            + toString(this._od_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._do_ == child)
        {
            this._do_ = null;
            return;
        }

        if(this._options_ == child)
        {
            this._options_ = null;
            return;
        }

        if(this._od_ == child)
        {
            this._od_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._do_ == oldChild)
        {
            setDo((TDo) newChild);
            return;
        }

        if(this._options_ == oldChild)
        {
            setOptions((POptions) newChild);
            return;
        }

        if(this._od_ == oldChild)
        {
            setOd((TOd) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
