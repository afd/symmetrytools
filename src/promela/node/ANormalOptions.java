/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ANormalOptions extends POptions
{
    private TColonColon _colonColon_;
    private PSequence _sequence_;
    private POptions _options_;

    public ANormalOptions()
    {
        // Constructor
    }

    public ANormalOptions(
        @SuppressWarnings("hiding") TColonColon _colonColon_,
        @SuppressWarnings("hiding") PSequence _sequence_,
        @SuppressWarnings("hiding") POptions _options_)
    {
        // Constructor
        setColonColon(_colonColon_);

        setSequence(_sequence_);

        setOptions(_options_);

    }

    @Override
    public Object clone()
    {
        return new ANormalOptions(
            cloneNode(this._colonColon_),
            cloneNode(this._sequence_),
            cloneNode(this._options_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANormalOptions(this);
    }

    public TColonColon getColonColon()
    {
        return this._colonColon_;
    }

    public void setColonColon(TColonColon node)
    {
        if(this._colonColon_ != null)
        {
            this._colonColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colonColon_ = node;
    }

    public PSequence getSequence()
    {
        return this._sequence_;
    }

    public void setSequence(PSequence node)
    {
        if(this._sequence_ != null)
        {
            this._sequence_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sequence_ = node;
    }

    public POptions getOptions()
    {
        return this._options_;
    }

    public void setOptions(POptions node)
    {
        if(this._options_ != null)
        {
            this._options_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._options_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._colonColon_)
            + toString(this._sequence_)
            + toString(this._options_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._colonColon_ == child)
        {
            this._colonColon_ = null;
            return;
        }

        if(this._sequence_ == child)
        {
            this._sequence_ = null;
            return;
        }

        if(this._options_ == child)
        {
            this._options_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._colonColon_ == oldChild)
        {
            setColonColon((TColonColon) newChild);
            return;
        }

        if(this._sequence_ == oldChild)
        {
            setSequence((PSequence) newChild);
            return;
        }

        if(this._options_ == oldChild)
        {
            setOptions((POptions) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
