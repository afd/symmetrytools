/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ACompoundEqExpr extends PEqExpr
{
    private PRelExpr _relExpr_;
    private TEqop _eqop_;
    private PEqExpr _eqExpr_;

    public ACompoundEqExpr()
    {
        // Constructor
    }

    public ACompoundEqExpr(
        @SuppressWarnings("hiding") PRelExpr _relExpr_,
        @SuppressWarnings("hiding") TEqop _eqop_,
        @SuppressWarnings("hiding") PEqExpr _eqExpr_)
    {
        // Constructor
        setRelExpr(_relExpr_);

        setEqop(_eqop_);

        setEqExpr(_eqExpr_);

    }

    @Override
    public Object clone()
    {
        return new ACompoundEqExpr(
            cloneNode(this._relExpr_),
            cloneNode(this._eqop_),
            cloneNode(this._eqExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompoundEqExpr(this);
    }

    public PRelExpr getRelExpr()
    {
        return this._relExpr_;
    }

    public void setRelExpr(PRelExpr node)
    {
        if(this._relExpr_ != null)
        {
            this._relExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relExpr_ = node;
    }

    public TEqop getEqop()
    {
        return this._eqop_;
    }

    public void setEqop(TEqop node)
    {
        if(this._eqop_ != null)
        {
            this._eqop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eqop_ = node;
    }

    public PEqExpr getEqExpr()
    {
        return this._eqExpr_;
    }

    public void setEqExpr(PEqExpr node)
    {
        if(this._eqExpr_ != null)
        {
            this._eqExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eqExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._relExpr_)
            + toString(this._eqop_)
            + toString(this._eqExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._relExpr_ == child)
        {
            this._relExpr_ = null;
            return;
        }

        if(this._eqop_ == child)
        {
            this._eqop_ = null;
            return;
        }

        if(this._eqExpr_ == child)
        {
            this._eqExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._relExpr_ == oldChild)
        {
            setRelExpr((PRelExpr) newChild);
            return;
        }

        if(this._eqop_ == oldChild)
        {
            setEqop((TEqop) newChild);
            return;
        }

        if(this._eqExpr_ == oldChild)
        {
            setEqExpr((PEqExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
