/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleAddExpr extends PAddExpr
{
    private PMultExpr _multExpr_;

    public ASimpleAddExpr()
    {
        // Constructor
    }

    public ASimpleAddExpr(
        @SuppressWarnings("hiding") PMultExpr _multExpr_)
    {
        // Constructor
        setMultExpr(_multExpr_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleAddExpr(
            cloneNode(this._multExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleAddExpr(this);
    }

    public PMultExpr getMultExpr()
    {
        return this._multExpr_;
    }

    public void setMultExpr(PMultExpr node)
    {
        if(this._multExpr_ != null)
        {
            this._multExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._multExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._multExpr_ == child)
        {
            this._multExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._multExpr_ == oldChild)
        {
            setMultExpr((PMultExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
