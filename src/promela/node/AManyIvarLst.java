/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AManyIvarLst extends PIvarLst
{
    private PIvar _ivar_;
    private TComma _comma_;
    private PIvarLst _ivarLst_;

    public AManyIvarLst()
    {
        // Constructor
    }

    public AManyIvarLst(
        @SuppressWarnings("hiding") PIvar _ivar_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PIvarLst _ivarLst_)
    {
        // Constructor
        setIvar(_ivar_);

        setComma(_comma_);

        setIvarLst(_ivarLst_);

    }

    @Override
    public Object clone()
    {
        return new AManyIvarLst(
            cloneNode(this._ivar_),
            cloneNode(this._comma_),
            cloneNode(this._ivarLst_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAManyIvarLst(this);
    }

    public PIvar getIvar()
    {
        return this._ivar_;
    }

    public void setIvar(PIvar node)
    {
        if(this._ivar_ != null)
        {
            this._ivar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ivar_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PIvarLst getIvarLst()
    {
        return this._ivarLst_;
    }

    public void setIvarLst(PIvarLst node)
    {
        if(this._ivarLst_ != null)
        {
            this._ivarLst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ivarLst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ivar_)
            + toString(this._comma_)
            + toString(this._ivarLst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ivar_ == child)
        {
            this._ivar_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._ivarLst_ == child)
        {
            this._ivarLst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ivar_ == oldChild)
        {
            setIvar((PIvar) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._ivarLst_ == oldChild)
        {
            setIvarLst((PIvarLst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
