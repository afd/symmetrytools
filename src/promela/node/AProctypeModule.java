/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AProctypeModule extends PModule
{
    private PProctype _proctype_;

    public AProctypeModule()
    {
        // Constructor
    }

    public AProctypeModule(
        @SuppressWarnings("hiding") PProctype _proctype_)
    {
        // Constructor
        setProctype(_proctype_);

    }

    @Override
    public Object clone()
    {
        return new AProctypeModule(
            cloneNode(this._proctype_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProctypeModule(this);
    }

    public PProctype getProctype()
    {
        return this._proctype_;
    }

    public void setProctype(PProctype node)
    {
        if(this._proctype_ != null)
        {
            this._proctype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._proctype_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._proctype_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._proctype_ == child)
        {
            this._proctype_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._proctype_ == oldChild)
        {
            setProctype((PProctype) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
