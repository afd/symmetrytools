/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ACompoundltRelExpr extends PRelExpr
{
    private PShiftExpr _shiftExpr_;
    private TLt _lt_;
    private PRelExpr _relExpr_;

    public ACompoundltRelExpr()
    {
        // Constructor
    }

    public ACompoundltRelExpr(
        @SuppressWarnings("hiding") PShiftExpr _shiftExpr_,
        @SuppressWarnings("hiding") TLt _lt_,
        @SuppressWarnings("hiding") PRelExpr _relExpr_)
    {
        // Constructor
        setShiftExpr(_shiftExpr_);

        setLt(_lt_);

        setRelExpr(_relExpr_);

    }

    @Override
    public Object clone()
    {
        return new ACompoundltRelExpr(
            cloneNode(this._shiftExpr_),
            cloneNode(this._lt_),
            cloneNode(this._relExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompoundltRelExpr(this);
    }

    public PShiftExpr getShiftExpr()
    {
        return this._shiftExpr_;
    }

    public void setShiftExpr(PShiftExpr node)
    {
        if(this._shiftExpr_ != null)
        {
            this._shiftExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._shiftExpr_ = node;
    }

    public TLt getLt()
    {
        return this._lt_;
    }

    public void setLt(TLt node)
    {
        if(this._lt_ != null)
        {
            this._lt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lt_ = node;
    }

    public PRelExpr getRelExpr()
    {
        return this._relExpr_;
    }

    public void setRelExpr(PRelExpr node)
    {
        if(this._relExpr_ != null)
        {
            this._relExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._shiftExpr_)
            + toString(this._lt_)
            + toString(this._relExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._shiftExpr_ == child)
        {
            this._shiftExpr_ = null;
            return;
        }

        if(this._lt_ == child)
        {
            this._lt_ = null;
            return;
        }

        if(this._relExpr_ == child)
        {
            this._relExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._shiftExpr_ == oldChild)
        {
            setShiftExpr((PShiftExpr) newChild);
            return;
        }

        if(this._lt_ == oldChild)
        {
            setLt((TLt) newChild);
            return;
        }

        if(this._relExpr_ == oldChild)
        {
            setRelExpr((PRelExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
