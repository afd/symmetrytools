/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AManyVarreflst extends PVarreflst
{
    private PVarref _varref_;
    private TComma _comma_;
    private PVarreflst _varreflst_;

    public AManyVarreflst()
    {
        // Constructor
    }

    public AManyVarreflst(
        @SuppressWarnings("hiding") PVarref _varref_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PVarreflst _varreflst_)
    {
        // Constructor
        setVarref(_varref_);

        setComma(_comma_);

        setVarreflst(_varreflst_);

    }

    @Override
    public Object clone()
    {
        return new AManyVarreflst(
            cloneNode(this._varref_),
            cloneNode(this._comma_),
            cloneNode(this._varreflst_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAManyVarreflst(this);
    }

    public PVarref getVarref()
    {
        return this._varref_;
    }

    public void setVarref(PVarref node)
    {
        if(this._varref_ != null)
        {
            this._varref_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varref_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PVarreflst getVarreflst()
    {
        return this._varreflst_;
    }

    public void setVarreflst(PVarreflst node)
    {
        if(this._varreflst_ != null)
        {
            this._varreflst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varreflst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._varref_)
            + toString(this._comma_)
            + toString(this._varreflst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._varref_ == child)
        {
            this._varref_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._varreflst_ == child)
        {
            this._varreflst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._varref_ == oldChild)
        {
            setVarref((PVarref) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._varreflst_ == oldChild)
        {
            setVarreflst((PVarreflst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
