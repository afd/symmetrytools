/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AManyNameLst extends PNameLst
{
    private TName _name_;
    private TComma _comma_;
    private PNameLst _nameLst_;

    public AManyNameLst()
    {
        // Constructor
    }

    public AManyNameLst(
        @SuppressWarnings("hiding") TName _name_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PNameLst _nameLst_)
    {
        // Constructor
        setName(_name_);

        setComma(_comma_);

        setNameLst(_nameLst_);

    }

    @Override
    public Object clone()
    {
        return new AManyNameLst(
            cloneNode(this._name_),
            cloneNode(this._comma_),
            cloneNode(this._nameLst_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAManyNameLst(this);
    }

    public TName getName()
    {
        return this._name_;
    }

    public void setName(TName node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PNameLst getNameLst()
    {
        return this._nameLst_;
    }

    public void setNameLst(PNameLst node)
    {
        if(this._nameLst_ != null)
        {
            this._nameLst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nameLst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._name_)
            + toString(this._comma_)
            + toString(this._nameLst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._nameLst_ == child)
        {
            this._nameLst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._name_ == oldChild)
        {
            setName((TName) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._nameLst_ == oldChild)
        {
            setNameLst((PNameLst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
