/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AUtype extends PUtype
{
    private TTypedef _typedef_;
    private TName _name_;
    private TLBrace _lBrace_;
    private PDeclLst _declLst_;
    private TRBrace _rBrace_;

    public AUtype()
    {
        // Constructor
    }

    public AUtype(
        @SuppressWarnings("hiding") TTypedef _typedef_,
        @SuppressWarnings("hiding") TName _name_,
        @SuppressWarnings("hiding") TLBrace _lBrace_,
        @SuppressWarnings("hiding") PDeclLst _declLst_,
        @SuppressWarnings("hiding") TRBrace _rBrace_)
    {
        // Constructor
        setTypedef(_typedef_);

        setName(_name_);

        setLBrace(_lBrace_);

        setDeclLst(_declLst_);

        setRBrace(_rBrace_);

    }

    @Override
    public Object clone()
    {
        return new AUtype(
            cloneNode(this._typedef_),
            cloneNode(this._name_),
            cloneNode(this._lBrace_),
            cloneNode(this._declLst_),
            cloneNode(this._rBrace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUtype(this);
    }

    public TTypedef getTypedef()
    {
        return this._typedef_;
    }

    public void setTypedef(TTypedef node)
    {
        if(this._typedef_ != null)
        {
            this._typedef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._typedef_ = node;
    }

    public TName getName()
    {
        return this._name_;
    }

    public void setName(TName node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public TLBrace getLBrace()
    {
        return this._lBrace_;
    }

    public void setLBrace(TLBrace node)
    {
        if(this._lBrace_ != null)
        {
            this._lBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBrace_ = node;
    }

    public PDeclLst getDeclLst()
    {
        return this._declLst_;
    }

    public void setDeclLst(PDeclLst node)
    {
        if(this._declLst_ != null)
        {
            this._declLst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declLst_ = node;
    }

    public TRBrace getRBrace()
    {
        return this._rBrace_;
    }

    public void setRBrace(TRBrace node)
    {
        if(this._rBrace_ != null)
        {
            this._rBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBrace_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._typedef_)
            + toString(this._name_)
            + toString(this._lBrace_)
            + toString(this._declLst_)
            + toString(this._rBrace_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._typedef_ == child)
        {
            this._typedef_ = null;
            return;
        }

        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._lBrace_ == child)
        {
            this._lBrace_ = null;
            return;
        }

        if(this._declLst_ == child)
        {
            this._declLst_ = null;
            return;
        }

        if(this._rBrace_ == child)
        {
            this._rBrace_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._typedef_ == oldChild)
        {
            setTypedef((TTypedef) newChild);
            return;
        }

        if(this._name_ == oldChild)
        {
            setName((TName) newChild);
            return;
        }

        if(this._lBrace_ == oldChild)
        {
            setLBrace((TLBrace) newChild);
            return;
        }

        if(this._declLst_ == oldChild)
        {
            setDeclLst((PDeclLst) newChild);
            return;
        }

        if(this._rBrace_ == oldChild)
        {
            setRBrace((TRBrace) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
