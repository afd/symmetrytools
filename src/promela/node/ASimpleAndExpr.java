/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleAndExpr extends PAndExpr
{
    private PBitorExpr _bitorExpr_;

    public ASimpleAndExpr()
    {
        // Constructor
    }

    public ASimpleAndExpr(
        @SuppressWarnings("hiding") PBitorExpr _bitorExpr_)
    {
        // Constructor
        setBitorExpr(_bitorExpr_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleAndExpr(
            cloneNode(this._bitorExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleAndExpr(this);
    }

    public PBitorExpr getBitorExpr()
    {
        return this._bitorExpr_;
    }

    public void setBitorExpr(PBitorExpr node)
    {
        if(this._bitorExpr_ != null)
        {
            this._bitorExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bitorExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._bitorExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._bitorExpr_ == child)
        {
            this._bitorExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._bitorExpr_ == oldChild)
        {
            setBitorExpr((PBitorExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
