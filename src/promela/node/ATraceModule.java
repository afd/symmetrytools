/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ATraceModule extends PModule
{
    private PTrace _trace_;

    public ATraceModule()
    {
        // Constructor
    }

    public ATraceModule(
        @SuppressWarnings("hiding") PTrace _trace_)
    {
        // Constructor
        setTrace(_trace_);

    }

    @Override
    public Object clone()
    {
        return new ATraceModule(
            cloneNode(this._trace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATraceModule(this);
    }

    public PTrace getTrace()
    {
        return this._trace_;
    }

    public void setTrace(PTrace node)
    {
        if(this._trace_ != null)
        {
            this._trace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._trace_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._trace_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._trace_ == child)
        {
            this._trace_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._trace_ == oldChild)
        {
            setTrace((PTrace) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
