/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AManySequence extends PSequence
{
    private PStep _step_;
    private TSeparator _separator_;
    private PSequence _sequence_;

    public AManySequence()
    {
        // Constructor
    }

    public AManySequence(
        @SuppressWarnings("hiding") PStep _step_,
        @SuppressWarnings("hiding") TSeparator _separator_,
        @SuppressWarnings("hiding") PSequence _sequence_)
    {
        // Constructor
        setStep(_step_);

        setSeparator(_separator_);

        setSequence(_sequence_);

    }

    @Override
    public Object clone()
    {
        return new AManySequence(
            cloneNode(this._step_),
            cloneNode(this._separator_),
            cloneNode(this._sequence_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAManySequence(this);
    }

    public PStep getStep()
    {
        return this._step_;
    }

    public void setStep(PStep node)
    {
        if(this._step_ != null)
        {
            this._step_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._step_ = node;
    }

    public TSeparator getSeparator()
    {
        return this._separator_;
    }

    public void setSeparator(TSeparator node)
    {
        if(this._separator_ != null)
        {
            this._separator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._separator_ = node;
    }

    public PSequence getSequence()
    {
        return this._sequence_;
    }

    public void setSequence(PSequence node)
    {
        if(this._sequence_ != null)
        {
            this._sequence_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sequence_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._step_)
            + toString(this._separator_)
            + toString(this._sequence_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._step_ == child)
        {
            this._step_ = null;
            return;
        }

        if(this._separator_ == child)
        {
            this._separator_ = null;
            return;
        }

        if(this._sequence_ == child)
        {
            this._sequence_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._step_ == oldChild)
        {
            setStep((PStep) newChild);
            return;
        }

        if(this._separator_ == oldChild)
        {
            setSeparator((TSeparator) newChild);
            return;
        }

        if(this._sequence_ == oldChild)
        {
            setSequence((PSequence) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
