/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class AManyRecvArgs extends PRecvArgs
{
    private PRecvArg _recvArg_;
    private TComma _comma_;
    private PRecvArgs _recvArgs_;

    public AManyRecvArgs()
    {
        // Constructor
    }

    public AManyRecvArgs(
        @SuppressWarnings("hiding") PRecvArg _recvArg_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PRecvArgs _recvArgs_)
    {
        // Constructor
        setRecvArg(_recvArg_);

        setComma(_comma_);

        setRecvArgs(_recvArgs_);

    }

    @Override
    public Object clone()
    {
        return new AManyRecvArgs(
            cloneNode(this._recvArg_),
            cloneNode(this._comma_),
            cloneNode(this._recvArgs_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAManyRecvArgs(this);
    }

    public PRecvArg getRecvArg()
    {
        return this._recvArg_;
    }

    public void setRecvArg(PRecvArg node)
    {
        if(this._recvArg_ != null)
        {
            this._recvArg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._recvArg_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PRecvArgs getRecvArgs()
    {
        return this._recvArgs_;
    }

    public void setRecvArgs(PRecvArgs node)
    {
        if(this._recvArgs_ != null)
        {
            this._recvArgs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._recvArgs_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._recvArg_)
            + toString(this._comma_)
            + toString(this._recvArgs_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._recvArg_ == child)
        {
            this._recvArg_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._recvArgs_ == child)
        {
            this._recvArgs_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._recvArg_ == oldChild)
        {
            setRecvArg((PRecvArg) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._recvArgs_ == oldChild)
        {
            setRecvArgs((PRecvArgs) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
