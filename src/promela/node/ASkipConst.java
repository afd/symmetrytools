/* This file was generated by SableCC (http://www.sablecc.org/). */

package src.promela.node;

import src.promela.analysis.*;

@SuppressWarnings("nls")
public final class ASkipConst extends PConst
{
    private TSkip _skip_;

    public ASkipConst()
    {
        // Constructor
    }

    public ASkipConst(
        @SuppressWarnings("hiding") TSkip _skip_)
    {
        // Constructor
        setSkip(_skip_);

    }

    @Override
    public Object clone()
    {
        return new ASkipConst(
            cloneNode(this._skip_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASkipConst(this);
    }

    public TSkip getSkip()
    {
        return this._skip_;
    }

    public void setSkip(TSkip node)
    {
        if(this._skip_ != null)
        {
            this._skip_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._skip_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._skip_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._skip_ == child)
        {
            this._skip_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._skip_ == oldChild)
        {
            setSkip((TSkip) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
